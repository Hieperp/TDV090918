@using TotalBase.Enums;
@using TotalPortal.Configuration;

@using TotalDTO
@using TotalDTO.Commons
@using TotalModel.Models;
@using TotalPortal.Areas.Commons.ViewModels

@{Layout = "~/Views/Shared/_LayoutPopup.cshtml";}

@model  ICommodityViewModel


@Html.HiddenFor(model => (model as ICommodityPrimitiveDTO).CommodityID)
@Html.HiddenFor(model => (model as IBaseDTO).Editable)

<div class="left-panel">
    <div style="padding-left: 48px; padding-top: 16px; "> <img src="~/Content/Images/New/2017/sale-off-icon-64.png" /> </div>
</div>
<div class="right-panel">
    <div class="right-first-panel">
        <div class="form-group">
            @Html.LabelFor(model => (model as ICommodityPrimitiveDTO).Code)
            <div class="div-input">
                @Html.Kendo().MaskedTextBoxFor(model => (model as ICommodityPrimitiveDTO).Code).HtmlAttributes(new { @class = "left-panel-input", @readonly = "readonly" })
            </div>
            <div class="div-validation-message">
                @Html.ValidationMessageFor(model => (model as ICommodityPrimitiveDTO).Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => (model as ICommodityPrimitiveDTO).Name)
            <div class="div-input">
                @Html.Kendo().MaskedTextBoxFor(model => (model as ICommodityPrimitiveDTO).Name).HtmlAttributes(new { @class = "left-panel-input", @readonly = "readonly" })
            </div>
            <div class="div-validation-message">
                @Html.ValidationMessageFor(model => (model as ICommodityPrimitiveDTO).Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => (model as ICommodityPrimitiveDTO).OfficialName)
            <div class="div-input">
                @Html.Kendo().MaskedTextBoxFor(model => (model as ICommodityPrimitiveDTO).OfficialName).HtmlAttributes(new { @class = "left-panel-input", @readonly = "readonly" })
            </div>
            <div class="div-validation-message">
                @Html.ValidationMessageFor(model => (model as ICommodityPrimitiveDTO).OfficialName, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group" style="padding-top: 16px;">            
            @Html.EditorFor(d => (d as ICommodityPrimitiveDTO).Bom, new { BomDisplayName = "Vui lòng chọn màng, sau đó nhấn 'Thêm màng vào khay'", LeftPanelInput = "left-panel-input" })            
        </div>



    </div>

    <div class="right-second-panel">        
        @Html.Partial("~/Views/Shared/EditorTemplates/DropDowns/CommodityCategory.cshtml", @Model, new ViewDataDictionary { { "CommodityCategoryReadonly", true } })
        @Html.Partial("~/Views/Shared/EditorTemplates/DropDowns/CommodityLine.cshtml", @Model, new ViewDataDictionary { { "CommodityLineReadonly", true } })
        @Html.Partial("~/Views/Shared/EditorTemplates/DropDowns/CommodityClass.cshtml", @Model, new ViewDataDictionary { { "CommodityClassReadonly", true } })

        <div class="form-group" style="padding-top: 17px;">
            @Html.Label(" ")
            <div class="div-input">
                <button type="button" class="k-button left-panel-input" onclick="AddCommodityBoms()"> <img src="~/Content/Images/New/2017/sale-off-icon-24.png" /> Thêm màng vào khay </button>
            </div>
        </div>
    </div>

</div>

<div class="form-group">
    @(Html.Kendo().Grid<CommodityBom>()
    .Name("gridBoms")
    .Columns(columns =>
    {
        columns.Bound(c => c.CommodityBomID).Hidden();
        columns.Bound(c => c.BomID).Hidden();
        columns.Bound(c => c.Code).Title("Mã").Width(80);
        columns.Bound(c => c.Name).Title("Tên").Width(100);       
        
        columns.Bound(c => c.EntryDate).Title("Ngày thêm").Width(70).Format("{0:" + Settings.DateTimeFormat + "}").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" });
        columns.Bound(c => c.Remarks).Title("Ghi chú").Width(100);
        columns.Template(t => { }).Title("").ClientTemplate("<input class='IsSelected' #= IsDefault ? checked='checked':'' #  type='checkbox' />").HtmlAttributes(new { @class = "grid-column-center", @readonly = "readonly" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(40);      
                
        columns.Template(model => null).Width(40)
            .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' onclick='RemoveCommodityBoms(#=PromotionID#)'><span class='k-icon k-delete'></span></a>");
    })

    .Scrollable(s => s.Height(217))
    .DataSource(ds => ds.Ajax()
            .Read(read => read.Action("GetCommodityBoms", "BomAPIs", new { area = "Commons" }).Data("onGetCommodityBoms"))
    .ServerOperation(true))
    .Selectable()            
    )

</div>


<div class="background-bar" style="height: 45px;">
    <div class="popup-button-bar">
        <button type="button" class="k-button" onclick="window.parent.$('#myWindow').data('kendoWindow').close()"> <img src="~/Content/Images/Mains/Size24/Users-Exit-icon-24.png" /> Đóng </button>
    </div>
</div>

<script src="~/Scripts/Controllers/Productions/PlannedOrders/tes.js"></script>
@*<script src="~/Scripts/Controllers/Commons/Products/Boms.js"></script>*@

<script type="text/javascript">   
    function onGetCommodityBoms(e) {
        return {
            commodityID: $("#CommodityID").val()
        };
    }

    function AddCommodityBoms(e) {
        if ($("#Editable").val() != 'True')
            return;

        debugger
        return $.ajax({            
            url: '@Url.Action("AddCommodityBoms", "BomAPIs", new { area = "Commons" })',
            data: JSON.stringify({ "bomID": $("#Bom_BomID").val(), "commodityID": $("#CommodityID").val() }),

            type: 'POST',
            contentType: 'application/json;',
            dataType: 'json',
            success: function (result) {
                if (result.AddResult == "Successfully") {
                    $("#gridBoms").data("kendoGrid").dataSource.read();
                }
                else
                    alert(result.AddResult);
            },
            error: function (jqXHR, textStatus) {
                alert(textStatus);
            }
        });
    }

    function RemoveCommodityBoms(promotionID) {
        if ($("#Editable").val() != 'True')
            return;
        return $.ajax({
            url: '@Url.Action("RemoveCommodityBoms", "BomAPIs", new { area = "Commons" })',
            data: JSON.stringify({ "commodityBomID": $("#CommodityBomID").val() }),

            type: 'POST',
            contentType: 'application/json;',
            dataType: 'json',
            success: function (result) {
                if (result.RemoveResult == "Successfully") {
                    $("#gridBoms").data("kendoGrid").dataSource.read();
                }
                else
                    alert(result.RemoveResult);
            },
            error: function (jqXHR, textStatus) {
                alert(textStatus);
            }
        });

    }

</script>

<style>
    .right-first-panel {
        padding-right: 30px;
    }

    .right-second-panel {
        padding-top: 1px;
        padding-right: 13px;
    }

    .left-panel-input {
        width: 100%;
    }
</style>